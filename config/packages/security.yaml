security:
  enable_authenticator_manager: true
  # https://symfony.com/doc/current/security.html#registering-the-user-hashing-passwords
  password_hashers:
    Symfony\Component\Security\Core\User\PasswordAuthenticatedUserInterface:
      algorithm: 'bcrypt'
      cost: 15

  # https://symfony.com/doc/current/security.html#loading-the-user-the-user-provider
  providers:
    # used to reload user from session & other features (e.g. switch_user)
    app_user_provider:
      entity:
        class: App\Entity\User
        property: email
    app_superadmin_provider:
      entity:
        class: App\Entity\Superadmin
        property: email
    app_admin_provider:
      entity:
        class: App\Entity\Pharmacists
        property: email
    # used to reload user from session & other features (e.g. switch_user)
    # used to reload user from session & other features (e.g. switch_user)
  firewalls:
    dev:
      pattern: ^/(_(profiler|wdt)|css|images|js)/
      security: false
    main:
#      pattern: ^/(%app.locales%)/user
      lazy: true
      entry_point: App\Security\AppAuthEntryPoint
      custom_authenticator:
        - App\Security\UserCustomAuthenticator
        - App\Security\SuperadminAuthenticator
        - App\Security\AdminAuthenticator
      logout:
        path: app_logout
        # where to redirect after logout
        # target: app_any_route

        # where to redirect after logout
        # target: app_any_route
#    superadmin:
##      pattern: ^/(%app.locales%)/superadmin
#      lazy: true
#      provider: app_superadmin_provider
#      entry_point: App\Security\AppAuthEntryPoint
#      form_login:
#        login_path: app_login_superadmin
#        check_path: app_login_superadmin
#    admin:
##      pattern: ^/(%app.locales%)/admin
#      lazy: true
#      provider: app_admin_provider
#      entry_point: App\Security\AppAuthEntryPoint
#      form_login:
#        login_path: app_login_admin
#        check_path: app_login_admin
      # activate different ways to authenticate
      # https://symfony.com/doc/current/security.html#the-firewall

      # https://symfony.com/doc/current/security/impersonating_user.html
      # switch_user: true

  # Easy way to control access for large sections of your site
  # Note: Only the *first* access control that matches will be used
  access_control:
    # - { path: ^/admin, roles: ROLE_ADMIN }
    - { path: ^/(%app.locales%)/user, roles: ROLE_USER }
    - { path: ^/(%app.locales%)/admin/login, roles: PUBLIC_ACCESS }
    - { path: ^/(%app.locales%)/admin, roles: ROLE_ADMIN }
    - { path: ^/(%app.locales%)/superadmin/login, roles: PUBLIC_ACCESS }
    - { path: ^/(%app.locales%)/superadmin, roles: ROLE_SUPERADMIN }

when@test:
  security:
    password_hashers:
      # By default, password hashers are resource intensive and take time. This is
      # important to generate secure password hashes. In tests however, secure hashes
      # are not important, waste resources and increase test times. The following
      # reduces the work factor to the lowest possible values.
      Symfony\Component\Security\Core\User\PasswordAuthenticatedUserInterface:
        algorithm: auto
        cost: 4 # Lowest possible value for bcrypt
        time_cost: 3 # Lowest possible value for argon
        memory_cost: 10 # Lowest possible value for argon
